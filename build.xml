<project name="LiquidEnergy" default="main">
	<property environment="env"/>
	<!-- Properties -->

	<property name="build.dir"           value="build"/>
	<property name="src.dir"             value="common"/>
	<property name="download.dir"        value="download"/>

	<property name="classes.dir"         value="${build.dir}/classes"/>
	<property name="jar.dir"             value="${build.dir}/dist"/>

	<property name="mcp.dir"             value="${build.dir}/forge/mcp"/>
	<property name="forge.dir"           value="${build.dir}/forge"/>

	<property name="mcpsrc.dir"          value="${mcp.dir}/src/minecraft"/>

	<property name="mc.version"          value="1.4.7"/>
	<property name="forge.version"       value="6.6.1.524"/>
	<property name="le.version"          value="0.0.1"/>
	
	<property name="forge.name"          value="minecraftforge-src-${mc.version}-${forge.version}.zip"/>

	<available property="forge-exists" file="${download.dir}/${forge.name}"/>

    <condition property="bamboo-build">
        <isset property="env.BAMBOO_REPOSITORY_GIT_BRANCH"/>
    </condition>
	<condition property="out-of-date">
		<not>
			<and>
                <available file="${download.dir}/${forge.name}"/>
                <available file="${mcpsrc.dir}"/>
            </and>
		</not>
	</condition>

	<mkdir dir="${download.dir}"/>

	<!-- Targets -->

	<!-- Clear build directory -->
	<target name="clean">
		<delete dir="${build.dir}"/>
	</target>

    <!-- If this is a Bamboo build, add branch -->
    <target name="git-branch-bamboo" if="bamboo-build">
        <property name="build.branch" value="-${env.BAMBOO_REPOSITORY_GIT_BRANCH}"/>
    </target>
    <target name="no-git-branch" unless="bamboo-build">
        <property name="build.branch" value=""/>
    </target>

	<!-- Set full version -->
	<target name="initialize-version" depends="git-branch-bamboo,no-git-branch">
        <exec executable="git" outputproperty="build.number">
            <arg value="rev-parse" />
            <arg value="--short" />
            <arg value="HEAD" />
        </exec>
		<property name="le.version.full" value="${le.version}-${build.number}${build.branch}"/>
		<echo message="Starting build for ${le.version.full}"/>
	</target>

	<!-- Download necessary files -->
	<target name="download-files" depends="download-forge"/>

	<!-- Download forge (if it doesn't exist) -->
	<target name="download-forge" unless="forge-exists" >
		<get src="http://files.minecraftforge.net/${forge.name}" dest="${download.dir}" usetimestamp="True"/>
	</target>

	<!-- Setup mcp and forge -->
	<target name="setup" depends="clean,initialize-version,download-files" if="out-of-date">
	
		<!-- Unzip them -->
		<unzip dest="${build.dir}" src="${download.dir}/${forge.name}"/>

		<!-- Install forge -->
		<exec dir="${forge.dir}" executable="cmd" osfamily="windows">
			<arg line="/c install.cmd"/>
		</exec>

		<exec dir="${forge.dir}" executable="sh" osfamily="unix">
			<arg value="install.sh"/>
		</exec>

	</target>

	<!-- Inherited from AZTeams -->
	<!-- Use for setting up a development environment. On Windows, REMOVE THE JUNCTION BEFORE BUILDING, else you will wipe your source tree. -->
	<target name="linksrc" depends="setup">

        <!-- Link source for development -->
        <exec executable="sh" osfamily="unix">
            <arg value="linksrc.sh" />
        </exec>

        <exec executable="cmd" osfamily="windows">
            <arg line="/c linksrc.bat"/>
        </exec>

    </target>

	<target name="compile" depends="initialize-version,setup">

		<delete dir="${classes.dir}"/>
		<mkdir dir="${classes.dir}"/>
		
		<!-- Copy LE source -->
		<copy todir="${mcpsrc.dir}">
			<fileset dir="${src.dir}"/>
			<filterset>
				<filter token="VERSION" value="${le.version.full}"/>
				<filter token="BUILD_NUMBER" value="${build.number}"/>
			</filterset>
		</copy>

		<!-- Recompile -->
		<exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
			<arg line="/c recompile.bat"/>
		</exec>

		<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
			<arg value="recompile.sh"/>
		</exec>

		<!-- Reobfuscate -->
		<exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
			<arg line="/c reobfuscate.bat"/>
		</exec>

		<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
			<arg value="reobfuscate.sh"/>
		</exec>

		<!-- Copy LE classes -->
		<copy todir="${classes.dir}">
			<fileset dir="${mcp.dir}/reobf/minecraft">
				<exclude name="/buildcraft"/>
			</fileset>
		</copy>

		<!-- Copy resources -->
		<copy todir="${classes.dir}">
			<fileset dir="resources">
				<exclude name="build.xml"/>
				<exclude name="build.number"/>
			</fileset>
		</copy>

	</target>

    <target name="javadoc" depends="initialize-version">

        <delete dir="${build.dir}/javadocs" />
        <mkdir dir="${build.dir}/javadocs" />

        <javadoc
            private="true"
            splitindex="true"
            use="true"
            author="true"
            version="true"
            destdir="${build.dir}/javadocs"
            Windowtitle="Liquid Energy :: Javadoc"
            classpath="${build.dir}/forge/mcp/lib/argo-2.25.jar;${build.dir}/forge/mcp/lib/asm-all-4.0.jar;${build.dir}/forge/mcp/lib/guava-12.0.1.jar;${build.dir}/forge/mcp/lib/asm-all-4.0-source.jar;${build.dir}/forge/mcp/lib/bcprov-jdk15on-147.jar;${build.dir}/forge/mcp/lib/guava-12.0.1-sources.jar;${build.dir}/forge/mcp/jars/bin/jinput.jar;${build.dir}/forge/mcp/jars/bin/lwjgl.jar;${build.dir}/forge/mcp/jars/bin/lwjgl_util.jar;${build.dir}/forge/mcp/jars/bin/minecraft.jar">
            
            <packageset dir="${src.dir}" defaultexcludes="yes">
                <include name="io/sunstrike/**" />
            </packageset>
        </javadoc>

        <zip
            destfile="${jar.dir}/LiquidEnergyJavadoc-${le.version.full}.zip"
            basedir="${build.dir}/javadocs"
        />

    </target>

    <target name="packapi" depends="initialize-version">
        <zip destfile="${jar.dir}/LiquidEnergyAPI-${le.version.full}.zip">
            <fileset dir="${src.dir}" includes="io/sunstrike/api/**" />
        </zip>
    </target>

	<!-- Package the compiled files -->
	<target name="package" depends="clean,compile,javadoc,packapi">

		<delete dir="${jar.dir}"/>
		<mkdir dir="${jar.dir}"/>
		<jar destfile="${jar.dir}/LiquidEnergy-${le.version.full}.jar" basedir="${classes.dir}"/>

	</target>

	<!-- Default target to run -->
	<target name="main" depends="package"/>

</project>